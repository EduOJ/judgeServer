#!/usr/bin/env python3
# mv "$1"/code "$1"/code.cpp
# clang++ "$1"/code.cpp -o "$1"/a.out -Qunused-arguments -lm -O2 -DONLINE_JUDGE -std=c++17 -fmax-errors=255
import argparse
import os
import subprocess

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('--cpp-no-stl', default=False, type=bool)
    parser.add_argument('--cpp-no-optimization', default=False, type=bool)
    parser.add_argument('--cpp-std', default="c++17", type=str)
    parser.add_argument('file', metavar='file', type=str, nargs=1, help='file to compile')
    args, unknown = parser.parse_known_args()
    os.system(f"mv {args.file[0]}/code {args.file[0]}/code.cpp")
    clang_args = ""
    if args.cpp_no_stl:
        clang_args += "--sysroot /judger/sysroot-no-stl "
    if not args.cpp_no_optimization:
        clang_args += "-O2"
    clang = subprocess.run(f"clang++ {args.file[0]}/code.cpp -o {args.file[0]}/a.out  -Qunused-arguments -lm  -DONLINE_JUDGE -std={args.cpp_std} -fmax-errors=255 {clang_args}", shell=True)
    exit(clang.returncode)

if __name__ == '__main__':
    main()
